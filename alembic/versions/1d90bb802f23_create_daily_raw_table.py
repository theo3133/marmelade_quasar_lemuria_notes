"""create daily_raw table

Revision ID: 1d90bb802f23
Revises: 
Create Date: 2025-07-03 19:27:49.150381

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1d90bb802f23'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('items', 'name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('snapshots', 'ts',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=False)
    op.drop_index('idx_snapshots_item_ts', table_name='snapshots')
    op.drop_index('idx_snapshots_ts', table_name='snapshots')
    op.drop_constraint('snapshots_item_id_ts_key', 'snapshots', type_='unique')
    op.create_unique_constraint('uq_item_time', 'snapshots', ['item_id', 'ts'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('uq_item_time', 'snapshots', type_='unique')
    op.create_unique_constraint('snapshots_item_id_ts_key', 'snapshots', ['item_id', 'ts'])
    op.create_index('idx_snapshots_ts', 'snapshots', ['ts'], unique=False)
    op.create_index('idx_snapshots_item_ts', 'snapshots', ['item_id', sa.literal_column('ts DESC')], unique=False)
    op.alter_column('snapshots', 'ts',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=False)
    op.alter_column('items', 'name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    # ### end Alembic commands ###
