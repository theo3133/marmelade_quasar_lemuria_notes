name: fetch_raw_to_git

on:
  push:
    branches: [ main ]
  schedule:
    - cron: "*/3 * * * *"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - uses: actions/setup-python@v5
      with:
        python-version: "3.12"
        cache: pip

    - name: Install requirements
      run: pip install -r requirements.txt

    - name: G√©n√©rer snapshot JSON (retry 3)
      env:
        TS: ${{ github.run_id }}-${{ github.run_attempt }}-${{ github.run_number }}
        HTTP_TIMEOUT: 30
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
      run: |
        set -e
        ATTEMPT=0
        until [ "$ATTEMPT" -ge 3 ]; do
          ATTEMPT=$((ATTEMPT+1))
          echo "‚è≥  Tentative $ATTEMPT/3"
          if python fetch_to_daily_raw.py --output buffer/${TS}.json; then
            echo "‚úÖ  Snapshot g√©n√©r√©"
            break
          fi
          if [ "$ATTEMPT" -eq 3 ]; then
            echo "‚ùå  √âchec apr√®s 3 tentatives" && exit 1
          fi
          sleep $((4 * ATTEMPT * ATTEMPT))
        done

    - name: Commit & push sur la branche raw-feed
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TS: ${{ github.run_id }}-${{ github.run_attempt }}-${{ github.run_number }}
      run: |
        git config user.name  "snapshot-bot"
        git config user.email "snapshot@users.noreply.github.com"

        git switch --create raw-feed || git switch raw-feed
        git pull --rebase origin raw-feed || true

        mkdir -p snapshots
        mv buffer/*.json snapshots/

        # üëá Force l'ajout des fichiers JSON ignor√©s par .gitignore
        git add -f snapshots/*.json

        git commit -m "snapshot ${TS}" || echo "rien √† committer"
        git push origin raw-feed
